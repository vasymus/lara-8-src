## TODO
## use only app, db, redis and traeffic as proxy
## think of creating docker-stack-staging.yml -- with also mailhog and redis webui
version: '3.9'

services:
    ### Reverse-Proxy (traefik) ###
    proxy:
        image: traefik:2.5.3
        ports:
            # The HTTP port
            - 80:80
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock

    ### APP (php-fpm) ###
    app:
        image: "vasymus/lara-8-src:${IMAGE_TAG}"
        environment:
            - APP_NAME=${APP_NAME}
            - APP_KEY_FILE=/run/secrets/app_key
            - APP_URL=${APP_URL}
            - DB_HOST=db
            - DB_DATABASE=${DOCKER_DB_NAME}
            - DB_USERNAME_FILE=/run/secrets/db_user
            - DB_PASSWORD_FILE=/run/secrets/db_password
            - CACHE_DRIVER=redis
            - FILESYSTEM_DRIVER=local
            - QUEUE_CONNECTION=database
            - SESSION_DRIVER=database
            - REDIS_HOST=redis
            - MAIL_MAILER=mailgun
            - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
            - MAILGUN_SECRET_FILE=/run/secrets/mailgun_secret
            - MAILGUN_ENDPOINT=api.mailgun.net
            - MAIL_FROM_ADDRESS=null
            - MAIL_FROM_NAME=${APP_NAME}
        secrets:
            - db_user
            - db_password
            - app_key
            - mailgun_secret
        labels:
            - traefik.http.routers.app.rule=Host(`${DOCKER_SERVER_NAME:-localhost}`)
            - traefik.http.services.app.loadbalancer.server.port=80
            #- traefik.http.routers.blog.tls=true
            #- traefik.http.routers.blog.tls.certresolver=lets-encrypt
            #- traefik.port=80

    ### DB (MariaDB) ###
    db:
        image: mariadb:10.6.4
        volumes:
            - mariadb-db-data:/var/lib/mysql
        deploy:
            placement:
                constraints: [node.role == manager]
        secrets:
            - db_root_password
            - db_user
            - db_password
        environment:
            # MYSQL_ROOT_PASSWORD is the only required
            - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
            - MYSQL_USER_FILE=/run/secrets/db_user
            - MYSQL_PASSWORD_FILE=/run/secrets/db_password
            - MYSQL_DATABASE=${DOCKER_DB_NAME}
            # didn't want to add any bind mount or additional Dockerfile, so put it to env variable
            # $$ is used for escaping from docker-compose @see https://docs.docker.com/compose/environment-variables/#substitute-environment-variables-in-compose-files
            # Init script will be run ONLY on first initialization
            - |
                MYSQL_CONFIG=
                [mysqld]
                # MariaDB database server configuration file.
                #
                # You can use this file to overwrite the default configuration
                #
                # For explanations see
                # https://mariadb.com/kb/en/configuring-mariadb-with-option-files/
                default_time_zone='UTC'
        # didn't want to add any bind mount or additional Dockerfile
        command:
            bash -c 'echo "$$MYSQL_CONFIG" > /etc/mysql/conf.d/my.cnf
            && chmod 555 /etc/mysql/conf.d/my.cnf
            && docker-entrypoint.sh mysqld'
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            interval: 10s
            timeout: 20s
            retries: 10

    ### Redis ###
    redis:
        image: redis:6.2.6
        volumes:
            - redis-data:/data

volumes:
    mariadb-db-data:
    redis-data:

secrets:
    db_root_password:
        external: true
    db_user:
        external: true
    db_password:
        external: true
    mailgun_secret:
        external: true
    app_key:
        external: true
